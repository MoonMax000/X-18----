#!/bin/bash

echo "üîç –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
echo "=================================================="
echo ""

# –õ–æ–≥–∏–Ω —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ seed-test-users.sh
PASSWORD="TestPass123!@#"

# –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
FIRST_USER=$(psql -d x18_backend -t -c "SELECT username FROM users LIMIT 1;" | tr -d ' ')

if [ -z "$FIRST_USER" ]; then
    echo "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î"
    exit 1
fi

echo "1Ô∏è‚É£ –í—Ö–æ–¥ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $FIRST_USER"

LOGIN_RESPONSE=$(curl -s http://localhost:8080/api/auth/login \
    -H "Content-Type: application/json" \
    -d "{
        \"email\": \"${FIRST_USER}@example.com\",
        \"password\": \"$PASSWORD\"
    }")

TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.token // empty')

if [ -z "$TOKEN" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º –∏–∑ seed-test-users.sh"
    echo "–û—Ç–≤–µ—Ç API:"
    echo "$LOGIN_RESPONSE" | jq
    echo ""
    echo "‚ö†Ô∏è –ü–æ–ø—Ä–æ–±—É—é —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∞..."
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    TEST_USER="notif_test_$(date +%s)"
    REGISTER_RESPONSE=$(curl -s http://localhost:8080/api/auth/register \
        -H "Content-Type: application/json" \
        -d "{
            \"username\": \"$TEST_USER\",
            \"email\": \"${TEST_USER}@example.com\",
            \"password\": \"TestPass123!@#\"
        }")
    
    TOKEN=$(echo "$REGISTER_RESPONSE" | jq -r '.token // empty')
    
    if [ -z "$TOKEN" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        exit 1
    fi
    
    echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $TEST_USER"
fi

echo "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
echo "Token: ${TOKEN:0:30}..."
echo ""

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
echo "2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ..."
ME=$(curl -s http://localhost:8080/api/users/me \
    -H "Authorization: Bearer $TOKEN")

USER_ID=$(echo "$ME" | jq -r '.id')
USERNAME=$(echo "$ME" | jq -r '.username')

echo "‚úÖ User ID: $USER_ID"
echo "‚úÖ Username: $USERNAME"
echo ""

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π..."
NOTIF_COUNT=$(psql -d x18_backend -t -c "SELECT COUNT(*) FROM notifications WHERE user_id = '$USER_ID';" | tr -d ' ')

if [ "$NOTIF_COUNT" -eq "0" ]; then
    echo "‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ—Ç, —Å–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤–æ–µ..."
    
    OTHER_USER=$(psql -d x18_backend -t -c "SELECT id FROM users WHERE id != '$USER_ID' LIMIT 1;" | tr -d ' ')
    
    if [ -z "$OTHER_USER" ]; then
        echo "‚ùå –ù–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
        exit 1
    fi
    
    psql -d x18_backend -c "
    INSERT INTO notifications (id, user_id, from_user_id, type, read, created_at)
    VALUES (gen_random_uuid(), '$USER_ID', '$OTHER_USER', 'like', false, NOW());" > /dev/null
    
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
fi

echo ""

# –ü–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ API
echo "4Ô∏è‚É£ –ó–∞–ø—Ä–æ—Å –∫ API /api/notifications..."
NOTIFICATIONS=$(curl -s "http://localhost:8080/api/notifications?limit=3" \
    -H "Authorization: Bearer $TOKEN")

echo "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "$NOTIFICATIONS" | jq '{
    total: .total,
    unread_count: .unread_count,
    count: (.notifications | length)
}'

echo ""
echo "5Ô∏è‚É£ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:"
FIRST_NOTIF=$(echo "$NOTIFICATIONS" | jq '.notifications[0]')

if [ "$FIRST_NOTIF" = "null" ]; then
    echo "‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ API!"
    exit 1
fi

echo "$FIRST_NOTIF" | jq

echo ""
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è actor:"
ACTOR=$(echo "$FIRST_NOTIF" | jq '.actor')
ACTOR_ID=$(echo "$FIRST_NOTIF" | jq -r '.actor_id')

if [ "$ACTOR" = "null" ]; then
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: actor = null"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –¥–ª—è —ç—Ç–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:"
    NOTIF_ID=$(echo "$FIRST_NOTIF" | jq -r '.id')
    
    psql -d x18_backend -c "
    SELECT 
        n.id as notification_id,
        n.from_user_id,
        u.id as user_id,
        u.username,
        u.display_name,
        u.avatar_url
    FROM notifications n
    LEFT JOIN users u ON n.from_user_id = u.id
    WHERE n.id = '$NOTIF_ID';"
    
    echo ""
    echo "üí° –î–∞–Ω–Ω—ã–µ –≤ –ë–î –µ—Å—Ç—å, –Ω–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null."
    echo "–ü—Ä–æ–±–ª–µ–º–∞: GORM Preload –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è JSON"
    echo ""
    echo "üîß –†–ï–®–ï–ù–ò–ï: –ù—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º!"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: ./STOP_CUSTOM_BACKEND_STACK.sh && ./START_CUSTOM_BACKEND_STACK.sh"
else
    echo "‚úÖ Actor –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!"
    echo "$ACTOR" | jq '{
        id,
        username,
        display_name,
        avatar_url
    }'
    echo ""
    echo "üéâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"
fi

echo ""
echo "=================================================="
echo "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
