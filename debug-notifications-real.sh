#!/bin/bash

echo "üîç –û—Ç–ª–∞–¥–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API –æ—Ç–≤–µ—Ç–∞"
echo "======================================================="
echo ""

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
TEST_USER="debug_$(date +%s)"
echo "1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $TEST_USER"

REGISTER=$(curl -s http://localhost:8080/api/auth/register \
    -H "Content-Type: application/json" \
    -d "{
        \"username\": \"$TEST_USER\",
        \"email\": \"${TEST_USER}@test.com\",
        \"password\": \"Test123!@#456\"
    }")

TOKEN=$(echo "$REGISTER" | jq -r '.access_token // empty')

if [ -z "$TOKEN" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "$REGISTER" | jq
    exit 1
fi

USER_ID=$(echo "$REGISTER" | jq -r '.user.id')
echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: $USER_ID"
echo ""

# –°–æ–∑–¥–∞–µ–º –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç "actor"
ACTOR_USER="actor_$(date +%s)"
echo "2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–∫—Ç–µ—Ä–∞: $ACTOR_USER"

ACTOR_REG=$(curl -s http://localhost:8080/api/auth/register \
    -H "Content-Type: application/json" \
    -d "{
        \"username\": \"$ACTOR_USER\",
        \"email\": \"${ACTOR_USER}@test.com\",
        \"password\": \"Test123!@#456\"
    }")

ACTOR_ID=$(echo "$ACTOR_REG" | jq -r '.user.id')
echo "‚úÖ –ê–∫—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω: $ACTOR_ID"
echo ""

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–∫—Ç–µ—Ä–∞
echo "3Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–∫—Ç–µ—Ä–∞..."
curl -s http://localhost:8080/api/users/me \
    -X PATCH \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $(echo "$ACTOR_REG" | jq -r '.access_token')" \
    -d "{
        \"display_name\": \"Test Actor\",
        \"bio\": \"This is a test actor\"
    }" > /dev/null

echo "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω"
echo ""

# –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î
echo "4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ë–î..."
psql -d x18_backend -c "
INSERT INTO notifications (id, user_id, from_user_id, type, read, created_at)
VALUES (gen_random_uuid(), '$USER_ID', '$ACTOR_ID', 'like', false, NOW())
RETURNING id;" > /dev/null

echo "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ë–î
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ë–î:"
psql -d x18_backend -c "
SELECT 
    n.id as notif_id,
    n.from_user_id,
    u.username as actor_username,
    u.display_name as actor_display_name
FROM notifications n
LEFT JOIN users u ON n.from_user_id = u.id
WHERE n.user_id = '$USER_ID'
LIMIT 1;"

echo ""

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ API
echo "6Ô∏è‚É£ –ó–∞–ø—Ä–æ—Å –∫ API /api/notifications:"
API_RESPONSE=$(curl -s "http://localhost:8080/api/notifications?limit=1" \
    -H "Authorization: Bearer $TOKEN")

echo "$API_RESPONSE" | jq

echo ""
echo "7Ô∏è‚É£ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:"
FIRST=$(echo "$API_RESPONSE" | jq '.notifications[0]')
echo "$FIRST" | jq

echo ""
echo "8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è actor:"
ACTOR=$(echo "$FIRST" | jq '.actor')

if [ "$ACTOR" = "null" ]; then
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: actor = null!"
    echo ""
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∏–º —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫:"
    echo "Binary modified:"
    stat -f "%Sm" custom-backend/bin/server 2>/dev/null || stat -c "%y" custom-backend/bin/server 2>/dev/null
    echo ""
    echo "Source modified:"
    stat -f "%Sm" custom-backend/internal/models/relations.go 2>/dev/null || stat -c "%y" custom-backend/internal/models/relations.go 2>/dev/null
else
    echo "‚úÖ Actor –ù–ï null:"
    echo "$ACTOR" | jq
fi

echo ""
echo "======================================================"
echo "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
