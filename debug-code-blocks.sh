#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞ –≤ –ø–æ—Å—Ç–∞—Ö
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å—é —Ü–µ–ø–æ—á–∫—É –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞"
echo "================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì${NC} $1"
        return 0
    else
        echo -e "${RED}‚úó${NC} $1"
        return 1
    fi
}

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
echo -e "${BLUE}–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend${NC}"
echo "------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω
curl -s http://localhost:8080/health > /dev/null 2>&1
check "Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
psql -U postgres -d x18_backend -c "SELECT 1;" > /dev/null 2>&1
check "PostgreSQL –¥–æ—Å—Ç—É–ø–Ω–∞"

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î
echo ""
echo -e "${BLUE}–®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î${NC}"
echo "-----------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ posts —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
psql -U postgres -d x18_backend -c "\d posts" > /dev/null 2>&1
check "–¢–∞–±–ª–∏—Ü–∞ posts —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª–µ metadata –µ—Å—Ç—å
METADATA_EXISTS=$(psql -U postgres -d x18_backend -t -c "SELECT column_name FROM information_schema.columns WHERE table_name='posts' AND column_name='metadata';" | tr -d ' ')
if [ "$METADATA_EXISTS" = "metadata" ]; then
    echo -e "${GREEN}‚úì${NC} –ü–æ–ª–µ metadata —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo -e "${RED}‚úó${NC} –ü–æ–ª–µ metadata –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø–æ–ª—è metadata
METADATA_TYPE=$(psql -U postgres -d x18_backend -t -c "SELECT data_type FROM information_schema.columns WHERE table_name='posts' AND column_name='metadata';" | tr -d ' ')
if [ "$METADATA_TYPE" = "jsonb" ]; then
    echo -e "${GREEN}‚úì${NC} –ü–æ–ª–µ metadata —Ç–∏–ø–∞ JSONB"
else
    echo -e "${YELLOW}‚ö†${NC} –ü–æ–ª–µ metadata —Ç–∏–ø–∞ $METADATA_TYPE (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å JSONB)"
fi

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç–æ–≤ —Å code_blocks
echo ""
echo -e "${BLUE}–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç–æ–≤ —Å code_blocks${NC}"
echo "--------------------------------------"

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã —Å code_blocks
CODE_BLOCKS_COUNT=$(psql -U postgres -d x18_backend -t -c "SELECT COUNT(*) FROM posts WHERE metadata ? 'code_blocks';" | tr -d ' ')
echo "–ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ —Å code_blocks: $CODE_BLOCKS_COUNT"

if [ "$CODE_BLOCKS_COUNT" -gt "0" ]; then
    echo ""
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç —Å code_blocks:"
    psql -U postgres -d x18_backend -c "SELECT id, LEFT(content, 30) as content, metadata->'code_blocks' as code_blocks FROM posts WHERE metadata ? 'code_blocks' ORDER BY created_at DESC LIMIT 1;"
fi

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞
echo ""
echo -e "${BLUE}–®–∞–≥ 4: –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –≤ –ë–î${NC}"
echo "---------------------------"

LAST_POST=$(psql -U postgres -d x18_backend -t -c "SELECT id, content, metadata FROM posts ORDER BY created_at DESC LIMIT 1;")
echo "$LAST_POST"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ metadata
HAS_METADATA=$(echo "$LAST_POST" | grep -o "code_blocks" | wc -l)
if [ "$HAS_METADATA" -gt "0" ]; then
    echo -e "${GREEN}‚úì${NC} –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç code_blocks –≤ metadata"
else
    echo -e "${YELLOW}‚ö†${NC} –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç code_blocks"
fi

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ Timeline API
echo ""
echo -e "${BLUE}–®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ Timeline API${NC}"
echo "-----------------------------"

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage (–µ—Å–ª–∏ –µ—Å—Ç—å)
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —ç—Ç–æ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
echo "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Timeline API –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo ""
echo -e "${YELLOW}curl -H \"Authorization: Bearer YOUR_TOKEN\" http://localhost:8080/api/timeline/explore?limit=1 | jq '.posts[0].metadata'${NC}"
echo ""
echo "–ó–∞–º–µ–Ω–∏—Ç–µ YOUR_TOKEN –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –∏–∑ localStorage (custom_token)"

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ Frontend
echo ""
echo -e "${BLUE}–®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ Frontend${NC}"
echo "--------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
FILES=(
    "client/services/api/custom-backend.ts"
    "client/pages/FeedTest.tsx"
    "client/features/feed/components/posts/FeedPost.tsx"
    "client/components/CreatePostBox/CreatePostModal/CreatePostModal.tsx"
)

for file in "${FILES[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úì${NC} $file"
    else
        echo -e "${RED}‚úó${NC} $file –ù–ï –Ω–∞–π–¥–µ–Ω"
    fi
done

# –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤
echo ""
echo -e "${BLUE}–®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤${NC}"
echo "----------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ metadata –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø
METADATA_TYPE_CHECK=$(grep "metadata?: Record<string, any>" client/services/api/custom-backend.ts | wc -l)
if [ "$METADATA_TYPE_CHECK" -ge "2" ]; then
    echo -e "${GREEN}‚úì${NC} TypeScript —Ç–∏–ø—ã metadata –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ (Record<string, any>)"
else
    echo -e "${RED}‚úó${NC} TypeScript —Ç–∏–ø—ã metadata –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ï"
    echo "   –í —Ñ–∞–π–ª–µ client/services/api/custom-backend.ts –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:"
    echo "   metadata?: Record<string, any>  // –ù–ï Record<string, string>!"
fi

# –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo ""
echo -e "${BLUE}–®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è${NC}"
echo "----------------------------"

# CreatePostModal
if grep -q "\[CreatePostModal\] Added code blocks to metadata" client/components/CreatePostBox/CreatePostModal/CreatePostModal.tsx; then
    echo -e "${GREEN}‚úì${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ CreatePostModal"
else
    echo -e "${RED}‚úó${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ CreatePostModal –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# FeedTest
if grep -q "\[FeedTest\] Converting post with code blocks" client/pages/FeedTest.tsx; then
    echo -e "${GREEN}‚úì${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ FeedTest"
else
    echo -e "${RED}‚úó${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ FeedTest –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# FeedPost
if grep -q "\[FeedPost\] Rendering code blocks" client/features/feed/components/posts/FeedPost.tsx; then
    echo -e "${GREEN}‚úì${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ FeedPost"
else
    echo -e "${RED}‚úó${NC} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ FeedPost –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# –ò—Ç–æ–≥–∏
echo ""
echo "================================"
echo -e "${BLUE}üìä –ò–¢–û–ì–ò${NC}"
echo "================================"
echo ""
echo "–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo ""
echo "1. –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞:"
echo "   ${YELLOW}client/features/feed/components/posts/FeedPost.tsx${NC}"
echo "   –°—Ç—Ä–æ–∫–∏: ~238-257"
echo ""
echo "2. –ö–û–ù–í–ï–†–¢–ï–† –¥–∞–Ω–Ω—ã—Ö:"
echo "   ${YELLOW}client/pages/FeedTest.tsx${NC}"
echo "   –°—Ç—Ä–æ–∫–∞: 71 (codeBlocks: post.metadata?.code_blocks || [])"
echo ""
echo "3. –°–û–ó–î–ê–ù–ò–ï –ø–æ—Å—Ç–∞:"
echo "   ${YELLOW}client/components/CreatePostBox/CreatePostModal/CreatePostModal.tsx${NC}"
echo "   –°—Ç—Ä–æ–∫–∏: ~114-127"
echo ""
echo "4. BACKEND API:"
echo "   ${YELLOW}custom-backend/internal/api/posts.go${NC}"
echo "   –°—Ç—Ä–æ–∫–∞: 86 (Metadata: req.Metadata)"
echo ""
echo "5. TYPESCRIPT –¢–ò–ü–´:"
echo "   ${YELLOW}client/services/api/custom-backend.ts${NC}"
echo "   –°—Ç—Ä–æ–∫–∏: 522, 543 (metadata?: Record<string, any>)"
echo ""
echo "================================"
echo ""
echo "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—Ç—è–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ:"
echo "  ${YELLOW}FeedPost.tsx${NC} —Å—Ç—Ä–æ–∫–∞ 248: max-w-full overflow-hidden"
echo "  ${YELLOW}FeedPost.tsx${NC} —Å—Ç—Ä–æ–∫–∞ 252: overflow-x-auto w-full"
echo "  ${YELLOW}FeedPost.tsx${NC} —Å—Ç—Ä–æ–∫–∞ 253: whiteSpace, wordBreak, overflowWrap"
echo ""
echo "–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: ${YELLOW}DEBUG_CODE_BLOCKS_GUIDE.md${NC}"
echo ""
