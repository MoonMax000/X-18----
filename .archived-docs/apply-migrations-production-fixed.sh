#!/bin/bash

# üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∫ production –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Railway
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º

set -e

echo "üîê –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∫ production –ë–î"
echo "======================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway CLI
if ! command -v railway &> /dev/null; then
    echo "‚ùå Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install railway"
    exit 1
fi

echo "üîó –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend..."
cd custom-backend

echo ""
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã –∏ —Å–≤—è–∑–∞–Ω—ã —Å –ø—Ä–æ–µ–∫—Ç–æ–º
railway status || {
    echo "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –ø—Ä–æ–µ–∫—Ç—É Railway"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  railway login"
    echo "  railway link"
    exit 1
}

echo ""
echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ 
CURRENT_SERVICE=$(railway status 2>/dev/null | grep "Service:" | awk '{print $2}')
echo "üìù –¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å: $CURRENT_SERVICE"

# X-18---- —ç—Ç–æ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ custom-backend –≤ Railway
if [[ "$CURRENT_SERVICE" != "custom-backend" ]] && [[ "$CURRENT_SERVICE" != "X-18----" ]]; then
    echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ backend —Å–µ—Ä–≤–∏—Å..."
    echo "‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å X-18---- –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ"
    railway link 2>/dev/null || {
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        echo ""
        echo "üìù –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:"
        echo "  railway link"
        echo "  –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: X-18----"
        echo ""
        echo "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 1
    }
else
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Å–µ—Ä–≤–∏—Å—É: $CURRENT_SERVICE"
fi

echo ""
echo "üìù –ë—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏:"
echo "  - 007: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ admin –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü"
echo "  - 008: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo ""

# –ü–æ–ª—É—á–∞–µ–º DATABASE_URL –∏–∑ Railway
echo "üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ DATABASE_URL..."
DATABASE_URL=$(railway variables get DATABASE_URL 2>/dev/null || echo "")

# –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞
if [ -z "$DATABASE_URL" ]; then
    DATABASE_URL=$(railway variables get DATABASE_PUBLIC_URL 2>/dev/null || echo "")
fi

# –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –ø—É—Å—Ç–æ, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
if [ -z "$DATABASE_URL" ]; then
    DB_HOST=$(railway variables get PGHOST 2>/dev/null || echo "")
    DB_PORT=$(railway variables get PGPORT 2>/dev/null || echo "")
    DB_NAME=$(railway variables get PGDATABASE 2>/dev/null || echo "")
    DB_USER=$(railway variables get PGUSER 2>/dev/null || echo "")
    DB_PASS=$(railway variables get PGPASSWORD 2>/dev/null || echo "")
    
    if [ ! -z "$DB_HOST" ] && [ ! -z "$DB_NAME" ] && [ ! -z "$DB_USER" ] && [ ! -z "$DB_PASS" ]; then
        DATABASE_URL="postgresql://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=require"
        echo "‚úÖ –°–æ–±—Ä–∞–Ω DATABASE_URL –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    fi
fi

if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å DATABASE_URL"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:"
    echo "  1. –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É Railway"
    echo "  2. –í –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å PostgreSQL —Å–µ—Ä–≤–∏—Å"
    echo "  3. –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø—Ä–∏ railway link"
    exit 1
fi

echo "‚úÖ DATABASE_URL –ø–æ–ª—É—á–µ–Ω"
echo ""

# –ú–∏–≥—Ä–∞—Ü–∏—è 007
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 007 (—Ä–æ–ª–∏ admin)..."
psql "$DATABASE_URL" << 'EOF'
-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è role –≤ —Ç–∞–±–ª–∏—Ü—É users –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name='users' AND column_name='role') THEN
        ALTER TABLE users ADD COLUMN role VARCHAR(50) DEFAULT 'user';
    END IF;
END $$;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã news –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
CREATE TABLE IF NOT EXISTS news (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    title VARCHAR(255) NOT NULL,
    description TEXT,
    url VARCHAR(500),
    image_url VARCHAR(500),
    category VARCHAR(100),
    source VARCHAR(100),
    is_active BOOLEAN DEFAULT true,
    published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_blocks –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
CREATE TABLE IF NOT EXISTS user_blocks (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    blocked_user_id UUID NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (blocked_user_id) REFERENCES users(id) ON DELETE CASCADE,
    UNIQUE(user_id, blocked_user_id)
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã post_reports –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
CREATE TABLE IF NOT EXISTS post_reports (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    post_id UUID NOT NULL,
    reporter_id UUID NOT NULL,
    reason VARCHAR(500),
    details TEXT,
    status VARCHAR(50) DEFAULT 'pending',
    reviewed_by UUID,
    review_note TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY (reporter_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (reviewed_by) REFERENCES users(id)
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã pinned_posts –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
CREATE TABLE IF NOT EXISTS pinned_posts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    post_id UUID NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    UNIQUE(user_id)
);
EOF

if [ $? -eq 0 ]; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 007 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
else
    echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ 007 (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞)"
fi

# –ú–∏–≥—Ä–∞—Ü–∏—è 008
echo ""
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 008 (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)..."
psql "$DATABASE_URL" << 'EOF'
-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü—É users
DO $$ 
BEGIN
    -- 2FA –ø–æ–ª—è
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='is_2fa_enabled') THEN
        ALTER TABLE users ADD COLUMN is_2fa_enabled BOOLEAN DEFAULT false;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='verification_method') THEN
        ALTER TABLE users ADD COLUMN verification_method VARCHAR(20) DEFAULT 'email';
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='backup_email') THEN
        ALTER TABLE users ADD COLUMN backup_email VARCHAR(255);
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='backup_phone') THEN
        ALTER TABLE users ADD COLUMN backup_phone VARCHAR(20);
    END IF;
    
    -- –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='is_email_verified') THEN
        ALTER TABLE users ADD COLUMN is_email_verified BOOLEAN DEFAULT false;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='is_phone_verified') THEN
        ALTER TABLE users ADD COLUMN is_phone_verified BOOLEAN DEFAULT false;
    END IF;
    
    -- Soft delete
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='is_deleted') THEN
        ALTER TABLE users ADD COLUMN is_deleted BOOLEAN DEFAULT false;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='deletion_requested_at') THEN
        ALTER TABLE users ADD COLUMN deletion_requested_at TIMESTAMP;
    END IF;
    
    -- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='last_active_at') THEN
        ALTER TABLE users ADD COLUMN last_active_at TIMESTAMP;
    END IF;
END $$;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã sessions
CREATE TABLE IF NOT EXISTS sessions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    refresh_token_hash TEXT NOT NULL,
    ip_address VARCHAR(45),
    user_agent TEXT,
    device_name VARCHAR(100),
    device_type VARCHAR(50),
    os VARCHAR(50),
    browser VARCHAR(50),
    location VARCHAR(100),
    is_revoked BOOLEAN DEFAULT false,
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã verification_codes
CREATE TABLE IF NOT EXISTS verification_codes (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    code VARCHAR(10) NOT NULL,
    type VARCHAR(50) NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    is_used BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã login_attempts
CREATE TABLE IF NOT EXISTS login_attempts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    email VARCHAR(255),
    ip_address VARCHAR(45) NOT NULL,
    user_agent TEXT,
    success BOOLEAN NOT NULL,
    failure_reason VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã lockouts
CREATE TABLE IF NOT EXISTS lockouts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    identifier VARCHAR(255) NOT NULL,
    lockout_type VARCHAR(20) NOT NULL,
    attempt_count INT DEFAULT 0,
    locked_until TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(identifier, lockout_type)
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_sessions_user_id ON sessions(user_id);
CREATE INDEX IF NOT EXISTS idx_sessions_expires_at ON sessions(expires_at);
CREATE INDEX IF NOT EXISTS idx_verification_codes_user_id ON verification_codes(user_id);
CREATE INDEX IF NOT EXISTS idx_login_attempts_email ON login_attempts(email);
CREATE INDEX IF NOT EXISTS idx_login_attempts_ip ON login_attempts(ip_address);
CREATE INDEX IF NOT EXISTS idx_lockouts_identifier ON lockouts(identifier);
EOF

if [ $? -eq 0 ]; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 008 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
else
    echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ 008 (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞)"
fi

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü..."
psql "$DATABASE_URL" -c "\dt"

echo ""
echo "‚ú® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üîê –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
echo "  1. –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ./setup-admin-role.sh"
echo "  2. –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: ./manage-admins.sh"
echo "  3. –ü–æ–ø–∞—Å—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: https://social.tyriantrade.com/admin"
echo ""
echo "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ production –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
