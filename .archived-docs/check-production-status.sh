#!/bin/bash

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã

set -e

echo "üîç –ü–†–û–í–ï–†–ö–ê PRODUCTION –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BACKEND_URL="https://x-18-production-38ec.up.railway.app"
FRONTEND_URL="https://social.tyriantrade.com"

# –°—á–µ—Ç—á–∏–∫–∏
SUCCESS_COUNT=0
FAIL_COUNT=0
TOTAL_CHECKS=8

echo "üìä –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É..."
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend health
echo -n "1. Backend Health Check... "
if curl -s -o /dev/null -w "%{http_code}" "$BACKEND_URL/health" | grep -q "200"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    ((SUCCESS_COUNT++))
else
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ $BACKEND_URL/health"
    ((FAIL_COUNT++))
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
echo -n "2. API Endpoints... "
if curl -s -o /dev/null -w "%{http_code}" "$BACKEND_URL/api/auth/check" | grep -q "401\|200"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    ((SUCCESS_COUNT++))
else
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   API endpoints –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
    ((FAIL_COUNT++))
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
echo -n "3. Frontend –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å... "
if curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL" | grep -q "200"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    ((SUCCESS_COUNT++))
else
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   Frontend –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $FRONTEND_URL"
    ((FAIL_COUNT++))
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ frontend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API
echo -n "4. Frontend API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è... "
FRONTEND_HTML=$(curl -s "$FRONTEND_URL" 2>/dev/null || echo "")
if echo "$FRONTEND_HTML" | grep -q "x-18-production-38ec.up.railway.app"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    echo "   Frontend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API URL"
    ((SUCCESS_COUNT++))
elif echo "$FRONTEND_HTML" | grep -q "localhost:8080"; then
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   Frontend –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç localhost:8080!"
    echo "   –ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–µ–ø–ª–æ–∏—Ç—å frontend: ./deploy-frontend-production.sh"
    ((FAIL_COUNT++))
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}"
    echo "   –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å API URL –≤ frontend"
    ((SUCCESS_COUNT++))
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS
echo -n "5. CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è... "
CORS_CHECK=$(curl -s -I -X OPTIONS "$BACKEND_URL/api/auth/login" \
    -H "Origin: https://social.tyriantrade.com" \
    -H "Access-Control-Request-Method: POST" 2>/dev/null | grep -i "access-control-allow-origin" || echo "")
    
if [ ! -z "$CORS_CHECK" ]; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    ((SUCCESS_COUNT++))
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}"
    echo "   CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
    ((SUCCESS_COUNT++))
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—á–µ—Ä–µ–∑ Railway CLI)
echo -n "6. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Railway... "
if command -v railway &> /dev/null; then
    cd custom-backend 2>/dev/null || cd backend 2>/dev/null || true
    
    if railway status &> /dev/null; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        echo "   Railway –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ"
        ((SUCCESS_COUNT++))
    else
        echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}"
        echo "   Railway CLI –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –ø—Ä–æ–µ–∫—Ç—É"
        echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: railway login && railway link"
        ((SUCCESS_COUNT++))
    fi
    
    cd .. 2>/dev/null || true
else
    echo -e "${YELLOW}‚ö†Ô∏è  SKIP${NC}"
    echo "   Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ((SUCCESS_COUNT++))
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
echo -n "7. Endpoint —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏... "
REGISTER_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
    -X POST "$BACKEND_URL/api/auth/register" \
    -H "Content-Type: application/json" \
    -d '{"test":"test"}' 2>/dev/null || echo "0")
    
if [ "$REGISTER_STATUS" -eq "400" ] || [ "$REGISTER_STATUS" -eq "422" ]; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    echo "   Endpoint –æ—Ç–≤–µ—á–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å $REGISTER_STATUS - –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)"
    ((SUCCESS_COUNT++))
elif [ "$REGISTER_STATUS" -eq "404" ]; then
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   404 –æ—à–∏–±–∫–∞! API URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π"
    ((FAIL_COUNT++))
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}"
    echo "   –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $REGISTER_STATUS"
    ((SUCCESS_COUNT++))
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞
echo -n "8. Endpoint –ª–æ–≥–∏–Ω–∞... "
LOGIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
    -X POST "$BACKEND_URL/api/auth/login" \
    -H "Content-Type: application/json" \
    -d '{"test":"test"}' 2>/dev/null || echo "0")
    
if [ "$LOGIN_STATUS" -eq "400" ] || [ "$LOGIN_STATUS" -eq "401" ] || [ "$LOGIN_STATUS" -eq "422" ]; then
    echo -e "${GREEN}‚úÖ OK${NC}"
    echo "   Endpoint –æ—Ç–≤–µ—á–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å $LOGIN_STATUS - –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)"
    ((SUCCESS_COUNT++))
elif [ "$LOGIN_STATUS" -eq "404" ]; then
    echo -e "${RED}‚ùå FAIL${NC}"
    echo "   404 –æ—à–∏–±–∫–∞! API URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π"
    ((FAIL_COUNT++))
else
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}"
    echo "   –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $LOGIN_STATUS"
    ((SUCCESS_COUNT++))
fi

echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
if [ $FAIL_COUNT -eq 0 ]; then
    echo -e "${GREEN}‚ú® –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!${NC}"
    echo ""
    echo "Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç:"
    echo "‚úÖ Backend: $BACKEND_URL"
    echo "‚úÖ Frontend: $FRONTEND_URL"
    echo "‚úÖ –í—Å–µ API endpoints –¥–æ—Å—Ç—É–ø–Ω—ã"
    echo ""
    echo "üìù –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
    echo "  ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "  ‚Ä¢ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
    echo "  ‚Ä¢ –ó–∞–≥—Ä—É–∂–∞—Ç—å –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã"
    echo "  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"
else
    echo -e "${RED}‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´${NC}"
    echo ""
    echo "–£—Å–ø–µ—à–Ω–æ: $SUCCESS_COUNT/$TOTAL_CHECKS"
    echo "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAIL_COUNT/$TOTAL_CHECKS"
    echo ""
    echo "üìù –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
    
    if curl -s -o /dev/null -w "%{http_code}" "$BACKEND_URL/health" | grep -q "404\|000"; then
        echo "  1. Backend –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Railway –¥–µ–ø–ª–æ–π"
    fi
    
    if echo "$FRONTEND_HTML" | grep -q "localhost:8080"; then
        echo "  2. –ü–µ—Ä–µ–¥–µ–ø–ª–æ–π—Ç–µ frontend: ./deploy-frontend-production.sh"
    fi
    
    echo ""
    echo "–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "  ./apply-migrations-production-fixed.sh"
    echo "  ./deploy-frontend-production.sh"
fi

echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo ""
echo "  –õ–æ–≥–∏ backend:        railway logs"
echo "  –°—Ç–∞—Ç—É—Å Railway:      railway status"
echo "  –°—Ç–∞—Ç—É—Å Netlify:      netlify status"
echo "  –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∞:    ./manage-admins.sh"
echo ""
echo "üîó –í–∞–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏:"
echo ""
echo "  Frontend:     $FRONTEND_URL"
echo "  Backend API:  $BACKEND_URL"
echo "  Admin –ø–∞–Ω–µ–ª—å: $FRONTEND_URL/admin"
echo ""
