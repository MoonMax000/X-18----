#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç: 2FA, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏, —Å–º–µ–Ω—É –ø–∞—Ä–æ–ª—è, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è

echo "================================================="
echo "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ô –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
echo "================================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# API URL
API_URL="http://localhost:8080/api"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
TEST_EMAIL="test_security_$(date +%s)@example.com"
TEST_USERNAME="security_test_$(date +%s)"
TEST_PASSWORD="SecurePass123!"
NEW_PASSWORD="NewSecurePass456!"

echo "üîê 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
echo "==========================================="
REGISTER_RESPONSE=$(curl -s -X POST $API_URL/auth/register \
  -H "Content-Type: application/json" \
  -d "{
    \"username\": \"$TEST_USERNAME\",
    \"email\": \"$TEST_EMAIL\",
    \"password\": \"$TEST_PASSWORD\"
  }")

ACCESS_TOKEN=$(echo $REGISTER_RESPONSE | jq -r '.access_token')
USER_ID=$(echo $REGISTER_RESPONSE | jq -r '.user.id')

if [ "$ACCESS_TOKEN" != "null" ]; then
  echo -e "${GREEN}‚úì –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞${NC}"
  echo "  Email: $TEST_EMAIL"
  echo "  Username: $TEST_USERNAME"
  echo "  User ID: $USER_ID"
else
  echo -e "${RED}‚úó –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏${NC}"
  echo "$REGISTER_RESPONSE"
  exit 1
fi

echo ""
echo "üîí 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ 2FA"
echo "==========================================="

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ 2FA
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ 2FA..."
SETTINGS_RESPONSE=$(curl -s -X GET $API_URL/auth/2fa/settings \
  -H "Authorization: Bearer $ACCESS_TOKEN")

IS_2FA_ENABLED=$(echo $SETTINGS_RESPONSE | jq -r '.is_2fa_enabled')
echo "  2FA –≤–∫–ª—é—á–µ–Ω–æ: $IS_2FA_ENABLED"

# –í–∫–ª—é—á–µ–Ω–∏–µ 2FA
echo ""
echo "–í–∫–ª—é—á–µ–Ω–∏–µ 2FA (email –º–µ—Ç–æ–¥)..."
ENABLE_2FA_RESPONSE=$(curl -s -X POST $API_URL/auth/2fa/enable \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"method\": \"email\",
    \"password\": \"$TEST_PASSWORD\"
  }")

DEBUG_CODE=$(echo $ENABLE_2FA_RESPONSE | jq -r '.debug_code')

if [ "$DEBUG_CODE" != "null" ]; then
  echo -e "${GREEN}‚úì –ö–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${NC}"
  echo "  Debug –∫–æ–¥: $DEBUG_CODE"
  
  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 2FA
  echo ""
  echo "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 2FA..."
  CONFIRM_2FA_RESPONSE=$(curl -s -X POST $API_URL/auth/2fa/confirm \
    -H "Authorization: Bearer $ACCESS_TOKEN" \
    -H "Content-Type: application/json" \
    -d "{
      \"code\": \"$DEBUG_CODE\",
      \"method\": \"email\"
    }")
  
  MESSAGE=$(echo $CONFIRM_2FA_RESPONSE | jq -r '.message')
  if [ "$MESSAGE" == "2FA enabled successfully" ]; then
    echo -e "${GREEN}‚úì 2FA —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–æ${NC}"
  else
    echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è 2FA${NC}"
    echo "$CONFIRM_2FA_RESPONSE"
  fi
else
  echo -e "${YELLOW}‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å 2FA (–≤–æ–∑–º–æ–∂–Ω–æ, email –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω)${NC}"
  echo "$ENABLE_2FA_RESPONSE"
fi

echo ""
echo "üì± 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏—è–º–∏"
echo "==========================================="

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ—Å—Å–∏–π
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π..."
SESSIONS_RESPONSE=$(curl -s -X GET $API_URL/auth/sessions \
  -H "Authorization: Bearer $ACCESS_TOKEN")

SESSIONS_COUNT=$(echo $SESSIONS_RESPONSE | jq '.sessions | length')
echo "  –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: $SESSIONS_COUNT"

if [ "$SESSIONS_COUNT" -gt 0 ]; then
  echo -e "${GREEN}‚úì –°–µ—Å—Å–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã${NC}"
  
  # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏—è—Ö
  echo $SESSIONS_RESPONSE | jq -r '.sessions[] | "  - \(.device_info // "Unknown device") | IP: \(.ip_address) | –°–æ–∑–¥–∞–Ω–∞: \(.created_at)"'
  
  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–µ—Ä–≤–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è
  FIRST_SESSION_ID=$(echo $SESSIONS_RESPONSE | jq -r '.sessions[0].id')
  
  if [ "$FIRST_SESSION_ID" != "null" ] && [ "$SESSIONS_COUNT" -gt 1 ]; then
    echo ""
    echo "–û—Ç–∑—ã–≤ —Å–µ—Å—Å–∏–∏ $FIRST_SESSION_ID..."
    REVOKE_RESPONSE=$(curl -s -X DELETE $API_URL/auth/sessions/$FIRST_SESSION_ID \
      -H "Authorization: Bearer $ACCESS_TOKEN")
    
    MESSAGE=$(echo $REVOKE_RESPONSE | jq -r '.message')
    if [ "$MESSAGE" == "Session revoked successfully" ]; then
      echo -e "${GREEN}‚úì –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω–∞${NC}"
    else
      echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–∞ —Å–µ—Å—Å–∏–∏${NC}"
      echo "$REVOKE_RESPONSE"
    fi
  fi
else
  echo -e "${RED}‚úó –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π${NC}"
fi

echo ""
echo "üîë 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"
echo "==========================================="

echo "–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è..."
RESET_REQUEST_RESPONSE=$(curl -s -X POST $API_URL/auth/password/reset \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$TEST_EMAIL\"
  }")

DEBUG_RESET_CODE=$(echo $RESET_REQUEST_RESPONSE | jq -r '.debug_code')

if [ "$DEBUG_RESET_CODE" != "null" ]; then
  echo -e "${GREEN}‚úì –ö–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${NC}"
  echo "  Debug –∫–æ–¥: $DEBUG_RESET_CODE"
  
  # –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è —Å –∫–æ–¥–æ–º
  echo ""
  echo "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è —Å –∫–æ–¥–æ–º..."
  RESET_CONFIRM_RESPONSE=$(curl -s -X POST $API_URL/auth/password/reset/confirm \
    -H "Content-Type: application/json" \
    -d "{
      \"email\": \"$TEST_EMAIL\",
      \"code\": \"$DEBUG_RESET_CODE\",
      \"new_password\": \"$NEW_PASSWORD\"
    }")
  
  MESSAGE=$(echo $RESET_CONFIRM_RESPONSE | jq -r '.message')
  if [ "$MESSAGE" == "Password reset successfully" ]; then
    echo -e "${GREEN}‚úì –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω${NC}"
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º..."
    LOGIN_RESPONSE=$(curl -s -X POST $API_URL/auth/login \
      -H "Content-Type: application/json" \
      -d "{
        \"email\": \"$TEST_EMAIL\",
        \"password\": \"$NEW_PASSWORD\"
      }")
    
    NEW_TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.access_token')
    REQUIRES_2FA=$(echo $LOGIN_RESPONSE | jq -r '.requires_2fa')
    
    if [ "$NEW_TOKEN" != "null" ] || [ "$REQUIRES_2FA" == "true" ]; then
      echo -e "${GREEN}‚úì –í—Ö–æ–¥ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º —É—Å–ø–µ—à–µ–Ω${NC}"
      
      if [ "$REQUIRES_2FA" == "true" ]; then
        echo "  –¢—Ä–µ–±—É–µ—Ç—Å—è 2FA –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è"
      fi
    else
      echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º${NC}"
      echo "$LOGIN_RESPONSE"
    fi
  else
    echo -e "${RED}‚úó –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è${NC}"
    echo "$RESET_CONFIRM_RESPONSE"
  fi
else
  echo -e "${RED}‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è${NC}"
  echo "$RESET_REQUEST_RESPONSE"
fi

echo ""
echo "üîê 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å 2FA"
echo "==========================================="

if [ "$IS_2FA_ENABLED" == "false" ]; then
  # –°–Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–∏–º 2FA –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –≤—ã–∫–ª—é—á–µ–Ω–æ
  echo "–í–∫–ª—é—á–µ–Ω–∏–µ 2FA –¥–ª—è —Ç–µ—Å—Ç–∞ –≤—Ö–æ–¥–∞..."
  
  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
  if [ "$NEW_TOKEN" != "null" ]; then
    ACCESS_TOKEN=$NEW_TOKEN
  fi
  
  # –í–∫–ª—é—á–µ–Ω–∏–µ 2FA
  ENABLE_2FA_RESPONSE=$(curl -s -X POST $API_URL/auth/2fa/enable \
    -H "Authorization: Bearer $ACCESS_TOKEN" \
    -H "Content-Type: application/json" \
    -d "{
      \"method\": \"email\",
      \"password\": \"$NEW_PASSWORD\"
    }")
  
  DEBUG_CODE=$(echo $ENABLE_2FA_RESPONSE | jq -r '.debug_code')
  
  if [ "$DEBUG_CODE" != "null" ]; then
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 2FA
    curl -s -X POST $API_URL/auth/2fa/confirm \
      -H "Authorization: Bearer $ACCESS_TOKEN" \
      -H "Content-Type: application/json" \
      -d "{
        \"code\": \"$DEBUG_CODE\",
        \"method\": \"email\"
      }" > /dev/null
  fi
fi

echo "–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ (–¥–æ–ª–∂–Ω–∞ —Ç—Ä–µ–±–æ–≤–∞—Ç—å 2FA)..."
LOGIN_2FA_RESPONSE=$(curl -s -X POST $API_URL/auth/login \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$TEST_EMAIL\",
    \"password\": \"$NEW_PASSWORD\"
  }")

REQUIRES_2FA=$(echo $LOGIN_2FA_RESPONSE | jq -r '.requires_2fa')
VERIFICATION_METHOD=$(echo $LOGIN_2FA_RESPONSE | jq -r '.verification_method')
DEBUG_2FA_CODE=$(echo $LOGIN_2FA_RESPONSE | jq -r '.debug_code')

if [ "$REQUIRES_2FA" == "true" ]; then
  echo -e "${GREEN}‚úì 2FA —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –≤—Ö–æ–¥–∞${NC}"
  echo "  –ú–µ—Ç–æ–¥: $VERIFICATION_METHOD"
  echo "  Debug –∫–æ–¥: $DEBUG_2FA_CODE"
  
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2FA –∫–æ–¥–∞
  echo ""
  echo "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è 2FA –∫–æ–¥–∞..."
  VERIFY_2FA_RESPONSE=$(curl -s -X POST $API_URL/auth/login/2fa \
    -H "Content-Type: application/json" \
    -d "{
      \"email\": \"$TEST_EMAIL\",
      \"code\": \"$DEBUG_2FA_CODE\"
    }")
  
  FINAL_TOKEN=$(echo $VERIFY_2FA_RESPONSE | jq -r '.access_token')
  
  if [ "$FINAL_TOKEN" != "null" ]; then
    echo -e "${GREEN}‚úì –í—Ö–æ–¥ —Å 2FA —É—Å–ø–µ—à–µ–Ω${NC}"
    echo "  –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"
  else
    echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ 2FA${NC}"
    echo "$VERIFY_2FA_RESPONSE"
  fi
else
  echo -e "${YELLOW}‚ö† 2FA –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)${NC}"
fi

echo ""
echo "üóëÔ∏è 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"
echo "==========================================="

echo "–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞..."
DELETE_RESPONSE=$(curl -s -X POST $API_URL/auth/delete-account \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"password\": \"$NEW_PASSWORD\",
    \"reason\": \"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è\"
  }")

MESSAGE=$(echo $DELETE_RESPONSE | jq -r '.message')
DELETION_DATE=$(echo $DELETE_RESPONSE | jq -r '.deletion_date')

if [ "$MESSAGE" != "null" ] && [[ "$MESSAGE" == *"marked for deletion"* ]]; then
  echo -e "${GREEN}‚úì –ê–∫–∫–∞—É–Ω—Ç –ø–æ–º–µ—á–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è${NC}"
  echo "  –î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è: $DELETION_DATE"
  echo "  –ï—Å—Ç—å 30 –¥–Ω–µ–π –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
else
  echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è${NC}"
  echo "$DELETE_RESPONSE"
fi

echo ""
echo "================================================="
echo "–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "================================================="

# –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo ""
echo "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:"
echo "  ‚úì –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"
echo "  ‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ 2FA"
echo "  ‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏"
echo "  ‚úì –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"
echo "  ‚úì –í—Ö–æ–¥ —Å 2FA"
echo "  ‚úì –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞"

echo ""
echo -e "${GREEN}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo ""
echo "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:"
echo "  - –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∫–æ–¥—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ email/SMS"
echo "  - Debug –∫–æ–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
echo "  - –£–¥–∞–ª–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π"
